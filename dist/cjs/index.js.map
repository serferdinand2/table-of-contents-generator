{
  "version": 3,
  "sources": ["../../src/index.ts"],
  "sourcesContent": ["interface Headers {\n  headerText: string;\n  id: string;\n  children: Headers[];\n}\n\ntype ContentType = \"md\" | \"html\";\n\nconst getHeadersFromHTML = (html: string) => {\n  const headerRegex = /<h[1-6][^>]*>[\\s\\S]*?<\\/h[1-6]>/g;\n  const headers = html.match(headerRegex);\n  return headers;\n};\n\nconst getHeadersFromMarkdown = (markdown: string) => {\n  // load markdown\n  const headerRegex = /#{1,6}.*\\n/g;\n  const headers = markdown.match(headerRegex);\n\n  return headers;\n};\n\n// get headers from html, or markdown\nexport const inputHeaders = (source: string, type: ContentType) => {\n  if (type === \"md\") {\n    return getHeadersFromMarkdown(source);\n  }\n  if (type === \"html\") {\n    return getHeadersFromHTML(source);\n  }\n};\n\nexport const parseHeaders = (source: string, type: ContentType): Headers[] => {\n  // get all headers\n  const htmlHeaders = inputHeaders(source, type);\n  if (!htmlHeaders || !htmlHeaders.length) {\n    return [];\n  }\n\n  // nest headers\n  const headers: Headers[] | undefined = [];\n  let currentHeaderArray: Headers[] | undefined = headers;\n  let currentLevel = 0;\n  if (type === \"md\") {\n    currentLevel = htmlHeaders[0].split(\"#\").length - 1;\n  } else {\n    currentLevel = parseInt(htmlHeaders[0].charAt(2));\n  }\n  const levelController = currentLevel - 1;\n\n  for (const header of htmlHeaders) {\n    let headerLevel: number;\n    let headerText: string;\n\n    if (type === \"md\") {\n      headerLevel = header.split(\"#\").length - 1;\n    } else {\n      headerLevel = parseInt(header.charAt(2));\n    }\n\n    if (type === \"md\") {\n      headerText = header\n        .replace(/#{1,6}/g, \"\")\n        .replace(/\\n/g, \"\")\n        .replace(/ {2}/g, \" \")\n        .trim();\n    } else {\n      headerText = header\n        .replace(/<[^>]*>/g, \"\")\n        .trim()\n        .replace(/\\n\\s*/g, \" \")\n        .replace(/ {2}/g, \" \");\n    }\n\n    const id = `#${headerText\n      .replace(/[^\\w\\s-]|_/g, \"\")\n      .replace(/\\s/g, \"-\")\n      .replace(/:/g, \"\")\n\n      .toLowerCase()}`;\n    if (headerLevel === currentLevel && currentHeaderArray) {\n      currentHeaderArray.push({ headerText: headerText, id, children: [] });\n    } else if (headerLevel > currentLevel && currentHeaderArray) {\n      currentHeaderArray[currentHeaderArray.length - 1].children = [\n        { headerText, id, children: [] },\n      ];\n      currentHeaderArray =\n        currentHeaderArray[currentHeaderArray.length - 1].children;\n      currentLevel = headerLevel;\n    } else if (headerLevel < currentLevel) {\n      currentHeaderArray = headers;\n      for (let i = 1; i < headerLevel - levelController; i++) {\n        currentHeaderArray =\n          currentHeaderArray[currentHeaderArray.length - 1].children;\n      }\n      currentLevel = headerLevel;\n      currentHeaderArray.push({ headerText: headerText, id, children: [] });\n    }\n  }\n  return headers;\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,IAAM,qBAAqB,CAAC,SAAiB;AAC3C,QAAM,cAAc;AACpB,QAAM,UAAU,KAAK,MAAM,WAAW;AACtC,SAAO;AACT;AAEA,IAAM,yBAAyB,CAAC,aAAqB;AAEnD,QAAM,cAAc;AACpB,QAAM,UAAU,SAAS,MAAM,WAAW;AAE1C,SAAO;AACT;AAGO,IAAM,eAAe,CAAC,QAAgB,SAAsB;AACjE,MAAI,SAAS,MAAM;AACjB,WAAO,uBAAuB,MAAM;AAAA,EACtC;AACA,MAAI,SAAS,QAAQ;AACnB,WAAO,mBAAmB,MAAM;AAAA,EAClC;AACF;AAEO,IAAM,eAAe,CAAC,QAAgB,SAAiC;AAE5E,QAAM,cAAc,aAAa,QAAQ,IAAI;AAC7C,MAAI,CAAC,eAAe,CAAC,YAAY,QAAQ;AACvC,WAAO,CAAC;AAAA,EACV;AAGA,QAAM,UAAiC,CAAC;AACxC,MAAI,qBAA4C;AAChD,MAAI,eAAe;AACnB,MAAI,SAAS,MAAM;AACjB,mBAAe,YAAY,CAAC,EAAE,MAAM,GAAG,EAAE,SAAS;AAAA,EACpD,OAAO;AACL,mBAAe,SAAS,YAAY,CAAC,EAAE,OAAO,CAAC,CAAC;AAAA,EAClD;AACA,QAAM,kBAAkB,eAAe;AAEvC,aAAW,UAAU,aAAa;AAChC,QAAI;AACJ,QAAI;AAEJ,QAAI,SAAS,MAAM;AACjB,oBAAc,OAAO,MAAM,GAAG,EAAE,SAAS;AAAA,IAC3C,OAAO;AACL,oBAAc,SAAS,OAAO,OAAO,CAAC,CAAC;AAAA,IACzC;AAEA,QAAI,SAAS,MAAM;AACjB,mBAAa,OACV,QAAQ,WAAW,EAAE,EACrB,QAAQ,OAAO,EAAE,EACjB,QAAQ,SAAS,GAAG,EACpB,KAAK;AAAA,IACV,OAAO;AACL,mBAAa,OACV,QAAQ,YAAY,EAAE,EACtB,KAAK,EACL,QAAQ,UAAU,GAAG,EACrB,QAAQ,SAAS,GAAG;AAAA,IACzB;AAEA,UAAM,KAAK,IAAI,WACZ,QAAQ,eAAe,EAAE,EACzB,QAAQ,OAAO,GAAG,EAClB,QAAQ,MAAM,EAAE,EAEhB,YAAY,CAAC;AAChB,QAAI,gBAAgB,gBAAgB,oBAAoB;AACtD,yBAAmB,KAAK,EAAE,YAAwB,IAAI,UAAU,CAAC,EAAE,CAAC;AAAA,IACtE,WAAW,cAAc,gBAAgB,oBAAoB;AAC3D,yBAAmB,mBAAmB,SAAS,CAAC,EAAE,WAAW;AAAA,QAC3D,EAAE,YAAY,IAAI,UAAU,CAAC,EAAE;AAAA,MACjC;AACA,2BACE,mBAAmB,mBAAmB,SAAS,CAAC,EAAE;AACpD,qBAAe;AAAA,IACjB,WAAW,cAAc,cAAc;AACrC,2BAAqB;AACrB,eAAS,IAAI,GAAG,IAAI,cAAc,iBAAiB,KAAK;AACtD,6BACE,mBAAmB,mBAAmB,SAAS,CAAC,EAAE;AAAA,MACtD;AACA,qBAAe;AACf,yBAAmB,KAAK,EAAE,YAAwB,IAAI,UAAU,CAAC,EAAE,CAAC;AAAA,IACtE;AAAA,EACF;AACA,SAAO;AACT;",
  "names": []
}
